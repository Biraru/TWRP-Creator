name: Recovery Build (Legacy)

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'Manifest URL (if want to use SSH keys, use git@github.com:XXXXX)'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni'
      MANIFEST_BRANCH:
        description: 'Specify your Manifest Branch'
        required: true
        default: 'twrp-8.1'
      DEVICE_TREE_URL:
        description: 'Device Tree URL'
        required: true
        default: 'https://github.com/BiraruStudios/android_device_infinix_X650'
      DEVICE_TREE_BRANCH:
        description: 'Specify your Device Tree Branch'
        required: true
        default: 'android-8.1'
      DEVICE_PATH:
        description: 'Specify your Device Path'
        required: true
        default: 'device/infinix/Infinix_X650'
      COMMON_TREE_URL:
        description: 'Common Tree URL (if no common tree, leave blank)'
        required: false
      COMMON_PATH:
        description: 'Common Path (if no common tree, leave blank)'
        required: false
      DEVICE_NAME:
        description: 'Specify your Device Name'
        required: true
        default: 'Infinix_X650'
      MAKEFILE_NAME:
        description: 'Specify your Makefile Name'
        required: true
        default: 'omni_Infinix_X650'
      BUILD_TARGET:
        description: 'Specify your Build Target'
        required: true
        default: 'recovery'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ github.event.inputs.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ github.event.inputs.MANIFEST_BRANCH }}"
        echo "Device Tree URL: ${{ github.event.inputs.DEVICE_TREE_URL }}"
        echo "Device Tree Branch: ${{ github.event.inputs.DEVICE_TREE_BRANCH }}"
        echo "Device Path: ${{ github.event.inputs.DEVICE_PATH }}"
        echo "Device Name: ${{ github.event.inputs.DEVICE_NAME }}"
        echo "Makefile Name: ${{ github.event.inputs.MAKEFILE_NAME }}"
        echo "Build Target: ${{ github.event.inputs.BUILD_TARGET }}.img"
        echo "::endgroup::"
 
    - name: Check Out
      uses: actions/checkout@v4

    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

    - name: Prepare the build environment
      run: |
        sudo apt update && sudo apt upgrade -y
        DEBIAN_FRONTEND=noninteractive sudo apt install -yq \
            gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib \
            libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils \
            xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev \
            libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick \
            libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libncurses5 python2
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Install OpenJDK 8
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Link Python2
      run: |
        sudo rm -rf /usr/bin/python
        sudo ln -s /usr/bin/python2 /usr/bin/python
      continue-on-error: true

    - name: Setup SSH Keys
      if: ${{ startsWith(github.event.inputs.MANIFEST_URL, 'git@github.com') || 
          startsWith(github.event.inputs.DEVICE_TREE_URL, 'git@github.com') ||
          startsWith(github.event.inputs.COMMON_TREE_URL, 'git@github.com') }}
      uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo

    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        git config --global user.name "Biraru"
        git config --global user.email "biraru@biraru.org"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
      id: pwd

    - name: Repo Sync
      run: |
        repo sync -j$(nproc --all) --force-sync
      working-directory: workspace

    - name: Clone device tree
      run: |
        mkdir archive
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} archive/
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Get Device Tree Commit Hash
      run: |
        git ls-remote ${{ github.event.inputs.DEVICE_TREE_URL }} refs/heads/${{ github.event.inputs.DEVICE_TREE_BRANCH }} | awk '{print $1}' > device_tree_commit.txt
        cat device_tree_commit.txt
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
      id: get_device_tree_commit

    - name: Clone common tree
      if: ${{ github.event.inputs.COMMON_TREE_URL && github.event.inputs.COMMON_PATH }}
      run: |
        git clone ${{ github.event.inputs.COMMON_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.COMMON_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Sync Device Dependencies
      run: |
        bash ${GITHUB_WORKSPACE}/local_scripts/convert.sh ${{ github.event.inputs.DEVICE_PATH }}/omni.dependencies
        repo sync -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}
      continue-on-error: true

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Building recovery
      run: |
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng && make clean && make ${{ github.event.inputs.BUILD_TARGET }}image -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Set Build Date
      if: success()
      run: |
        echo "BUILD_DATE=$(date '+%d %B %Y')" >> $GITHUB_ENV

    - name: Set Commit Hash
      if: success()
      run: |
        echo "COMMIT_HASH=$(cat ${{ github.workspace }}/workspace/device_tree_commit.txt)" >> $GITHUB_ENV

    - name: Archive Source Code
      if: success()
      run: |
        zip -r dt-source.zip ${{ steps.pwd.outputs.workspace-folder }}/archive/
        tar -czvf dt-source.tar.gz ${{ steps.pwd.outputs.workspace-folder }}/archive/

    - name: Upload to Release
      if: success()
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{ github.workspace }}/workspace/out/target/product/${{ inputs.DEVICE_NAME }}/${{ inputs.BUILD_TARGET }}.img
          ${{ github.workspace }}/workspace/out/target/product/${{ inputs.DEVICE_NAME }}/*installer*zip
          ${{ github.workspace }}/workspace/out/target/product/${{ inputs.DEVICE_NAME }}/ramdisk-recovery.*
          ${{ github.workspace }}/workspace/out/target/product/${{ inputs.DEVICE_NAME }}/vbmeta.*
          ${{ github.workspace }}/dt-source.zip
          ${{ github.workspace }}/dt-source.tar.gz
        name: Unofficial TWRP for ${{ inputs.DEVICE_NAME }} // ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}
        body: |
          Build: ${{ inputs.MANIFEST_BRANCH }}
          Device: [Device Tree/Branch](${{ github.event.inputs.DEVICE_TREE_URL }}/tree/${{ github.event.inputs.DEVICE_TREE_BRANCH }})
          Commit: Most recent [commit](${{ github.event.inputs.DEVICE_TREE_URL }}/commit/${{ env.COMMIT_HASH }}) during building.
        prerelease: true
